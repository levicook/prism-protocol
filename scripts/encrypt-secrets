#!/bin/bash
set -euo pipefail
source "$(dirname "$0")/common.sh"
cd "$PROJECT_ROOT"

# Check if recipients file exists
if [ ! -f secrets/recipients.txt ]; then
    echo "Error: recipients.txt not found in secrets/"
    echo "Please ensure the file exists and contains public keys"
    exit 1
fi

# Ensure required directories exist
mkdir -p secrets/{encrypted-keypairs,decrypted-keypairs}

# Encrypt each decrypted file
while IFS= read -r decrypted_file; do
    # Get the base filename
    base_name=$(basename "$decrypted_file")
    encrypted_file="secrets/encrypted-keypairs/$base_name.enc"

    # Verify it's a valid Solana keypair
    if ! solana address -k "$decrypted_file" >/dev/null 2>&1; then
        echo "Error: $decrypted_file is not a valid Solana keypair"
        exit 1
    fi

    # Create temp file for encryption
    temp_file=$(mktemp)
    trap 'rm -f "$temp_file"' EXIT

    echo "Encrypting $decrypted_file to $encrypted_file"
    if ! age -e --recipients-file secrets/recipients.txt "$decrypted_file" >"$temp_file"; then
        echo "Error: Failed to encrypt $decrypted_file"
        exit 1
    fi

    # Move temp file to final location
    mv "$temp_file" "$encrypted_file"
    echo "Verified and encrypted $base_name (address: $(solana address -k "$decrypted_file"))"
done < <(find secrets/decrypted-keypairs -maxdepth 1 -name '*.json' -type f)

echo "Encryption complete. You can now commit the encrypted files."
