#!/bin/bash
set -euo pipefail
source "$(dirname "$0")/common.sh"
cd "$PROJECT_ROOT"

# Ensure required directories exist
mkdir -p secrets/{encrypted-keypairs,decrypted-keypairs}

# Check if age key exists
if [ ! -f ~/.age/"$PROJECT_NAME-dev.txt" ]; then
    echo "Error: Age key not found at ~/.age/$PROJECT_NAME-dev.txt"
    echo "Please generate your key with: age-keygen -o ~/.age/$PROJECT_NAME-dev.txt"
    echo "Be sure to backup your key to a secure location!"
    exit 1
fi

# Decrypt each encrypted file
while IFS= read -r encrypted_file; do
    # Get the base filename without .enc
    base_name=$(basename "$encrypted_file" .enc)
    decrypted_file="secrets/decrypted-keypairs/$base_name"

    # Create temp file for verification
    temp_file=$(mktemp)
    trap 'rm -f "$temp_file"' EXIT

    echo "Decrypting $encrypted_file to $decrypted_file"
    if ! age -d -i ~/.age/"$PROJECT_NAME-dev.txt" "$encrypted_file" >"$temp_file"; then
        echo "Error: Failed to decrypt $encrypted_file"
        exit 1
    fi

    # Verify it's a valid Solana keypair
    if ! solana address -k "$temp_file" >/dev/null 2>&1; then
        echo "Error: Decrypted file is not a valid Solana keypair"
        exit 1
    fi

    # Move temp file to final location
    mv "$temp_file" "$decrypted_file"
    echo "Verified and decrypted $base_name (address: $(solana address -k "$decrypted_file"))"
done < <(find secrets/encrypted-keypairs -maxdepth 1 -name '*.json.enc' -type f)

echo "Decryption complete. Remember to run ./scripts/shred-secrets when done!"
