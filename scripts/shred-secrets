#!/bin/bash
set -euo pipefail
source "$(dirname "$0")/common.sh"
cd "$PROJECT_ROOT"

if [ ! -d "secrets/decrypted-keypairs" ]; then
    echo "No decrypted secrets directory found"
    exit 0
fi

# Check if age key exists
if [ ! -f ~/.age/"$PROJECT_NAME-dev.txt" ]; then
    echo "Error: Age key not found at ~/.age/$PROJECT_NAME-dev.txt"
    echo "Please generate your key with: age-keygen -o ~/.age/$PROJECT_NAME-dev.txt"
    echo "Be sure to backup your key to a secure location!"
    exit 1
fi

echo "Verifying and securely deleting decrypted secrets..."
while IFS= read -r file; do
    base_name=$(basename "$file")
    encrypted_file="secrets/encrypted-keypairs/$base_name.enc"

    # Check if backup exists
    if [ ! -f "$encrypted_file" ]; then
        echo "Error: No backup found for $file"
        echo "Please run ./scripts/restore-secrets first"
        exit 1
    fi

    # Create temp file for verification
    temp_file=$(mktemp)
    trap 'rm -f "$temp_file"' EXIT

    # Decrypt backup to temp file
    echo "Verifying backup for $base_name..."
    if ! age -d -i ~/.age/"$PROJECT_NAME-dev.txt" "$encrypted_file" >"$temp_file"; then
        echo "Error: Failed to decrypt backup for $base_name"
        exit 1
    fi

    # Get addresses from both files
    if ! original_addr=$(solana address -k "$file" 2>/dev/null) ||
        ! backup_addr=$(solana address -k "$temp_file" 2>/dev/null); then
        echo "Error: Failed to get Solana address from one or both keypair files"
        exit 1
    fi

    # Compare addresses
    if [ "$original_addr" != "$backup_addr" ]; then
        echo "Error: Keypair mismatch for $base_name"
        echo "Original address: $original_addr"
        echo "Backup address: $backup_addr"
        exit 1
    fi

    echo "Verified backup for $base_name (address: $original_addr)"
    echo "Shredding $file"
    shred -u "$file"
done < <(find secrets/decrypted-keypairs -maxdepth 1 -name '*.json' -type f)

echo "All decrypted secrets have been securely deleted"
